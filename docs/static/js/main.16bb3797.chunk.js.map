{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","res","json","data","gifs","map","img","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","divRoot","document","getElementById","ReactDOM","render"],"mappings":"qMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEdC,mBAAS,IAFK,mBAE3CC,EAF2C,KAE/BC,EAF+B,KAiBlD,OACI,0BAAMC,SAVW,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,OAMZ,2BACEO,KAAK,OACLC,MAAQT,EACRU,SAlBkB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,YCNdG,EAAc,SAAC,GAAyB,EAAtBC,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAExC,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,+BAAKA,EAAL,O,uBCPOK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEfN,EAFe,iDAEiCO,UAAUF,GAF3C,+DAGHG,MAAMR,GAHH,cAGfS,EAHe,gBAIEA,EAAIC,OAJN,uBAIbC,EAJa,EAIbA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATjB,kBAadY,GAbc,4CAAH,sDCKPK,EAAW,SAAC,GAAoB,IAAjBZ,EAAgB,EAAhBA,SAAgB,ECHhB,SAACA,GAAc,IAAD,EAEdrB,mBAAS,CACjC2B,KAAM,GACNO,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAgBxC,OAVAC,qBAAW,WACTjB,EAASC,GACRiB,MAAK,SAAAC,GACJH,EAAS,CACPT,KAAMY,EACNL,SAAS,SAIZ,CAACb,IACGc,EDX0BK,CAAanB,GAAjCU,EAF6B,EAElCJ,KAAaO,EAFqB,EAErBA,QAIrB,OACE,oCACE,wBAAIjB,UAAU,0CAAd,IAA0DI,EAA1D,KAEEa,EAAU,uBAAGjB,UAAU,yCAAb,WAAmE,KAC/E,yBAAKA,UAAU,aAGTc,EAAOF,KAAK,SAACC,GAAD,OACV,kBAAC,EAAD,eACEW,IAAKX,EAAIhB,IACJgB,UEUNY,EA3BM,WAAO,IAAD,EAGW1C,mBAAS,CAAC,qBAHrB,mBAGlBQ,EAHkB,KAGNT,EAHM,KAMzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEIS,EAAWqB,KAAK,SAAAR,GAAQ,OACtB,kBAAC,EAAD,CACEoB,IAAMpB,EACNA,SAAWA,UCjBnBsB,G,MAAUC,SAASC,eAAe,SAExCC,IAASC,OAAO,kBAAC,EAAD,MAAkBJ,I","file":"static/js/main.16bb3797.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( { setCategories } ) => {\n\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if( inputValue.trim().length > 2){\n      setCategories( categories => [inputValue, ...categories]);\n      setInputValue('');\n    }\n\n  }\n  return (\n      <form onSubmit={ handleSubmit }>\n        <input\n          type=\"text\"\n          value={ inputValue }\n          onChange={ handleInputChange }\n        />\n      </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n\n","import React from 'react'\n\nexport const GifGridItem = ( { id, title, url } ) => {\n\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={ url } alt={ title }/>\n      <p> {title} </p>\n    </div>\n  )\n}\n","export const getGifs = async(category) => {\n\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=50&api_key=bC5H4IpHbJNBPJJFhkB7KkhuRvVBFyUh`;\n  const res = await fetch(url);\n  const { data } = await res.json();\n  const gifs = data.map( img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    }\n  })\n  \n  return gifs;\n}","import React from 'react'\n// import React, { useState, useEffect } from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GiftGrid = ( { category } ) => {\n\n  const { data:images, loading } = useFetchGifs(category);\n  \n  \n\n  return (\n    <>\n      <h3 className=\"card animate__animated animate__fadeIn\"> { category } </h3>\n\n      { loading ? <p className=\"card animate__animated animate__flash\">Loading</p> : null }\n      <div className=\"card-grid\">\n        \n          { \n            images.map( (img) => (\n              <GifGridItem \n                key={img.id}\n                { ...img }\n              />\n\n            ))\n          }\n      </div>\n    </>\n  )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\nexport const useFetchGifs = (category) => {\n  \n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n  useEffect( () => {\n    getGifs( category )\n    .then(imgs => {\n      setState({\n        data: imgs,\n        loading: false\n      });\n    });\n    \n  }, [category]);\n  return state;\n}\n","//  rafc snippet para componente\nimport React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GiftGrid } from './components/GiftGrid';\n\nconst GifExpertApp = () => {\n  \n\n  const [categories, setCategories] = useState(['Naruto Shippuden']);\n\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={ setCategories }/>\n      <hr></hr>\n      \n      <ol>\n        {\n          categories.map( category =>(\n            <GiftGrid \n              key={ category }\n              category={ category } \n            />\n          ))\n        }\n      </ol>\n    </>\n  );\n  \n};\n\nexport default GifExpertApp;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nconst divRoot = document.getElementById('root')\n\nReactDOM.render(<GifExpertApp />, divRoot);\n\n\n"],"sourceRoot":""}